version: 2
jobs:
  test:
    docker:
      - image: circleci/python
      - image: circleci/postgres
        environment:
          POSTGRES_USER: zadacha
          POSTGRES_DB: zadacha
          POSTGRES_PASSWORD: zadacha
    working_directory: ~/zadacha

    steps:
      - checkout

      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "setup.py" }}
            - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r dev-requirements.txt
            pip install -e .

      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "setup.py" }}

      - run:
          name: run tests
          command: |
            . venv/bin/activate
            set -e && make test

      - run:
          name: generate coverage report
          when: always
          command: |
            . venv/bin/activate
            coverage html
            codecov

      - store_test_results:
          path: test-reports

      - store_artifacts:
          path: htmlcov

      - store_artifacts:
          path: test-reports
  build_docker:
    docker:
      - image: circleci/python
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Install Docker client
          command: |
            set -x
            VER="17.03.0-ce"
            curl -L -o /tmp/docker-$VER.tgz https://get.docker.com/builds/Linux/x86_64/docker-$VER.tgz
            tar -xz -C /tmp -f /tmp/docker-$VER.tgz
            sudo mv /tmp/docker/* /usr/bin
      - run:
          name: Build Image
          command: |
            docker build -t levlaz/zadacha:$CIRCLE_SHA1 .
            docker tag levlaz/zadacha:$CIRCLE_SHA1 levlaz/zadacha:latest
            docker login -u $DOCKER_LOGIN -p $DOCKER_PASSWORD
            docker push levlaz/zadacha
  deploy:
    docker:
      - image: circleci/python
    steps:
      - checkout
      - run:
          name: Deploy to Production
          command: ./scripts/deploy.sh

workflows:
  version: 2
  build_test_deploy:
    jobs:
      - test
      - build_docker:
          requires:
            - test
          filters:
            branches:
              only: master
      - deploy:
          requires:
            - build_docker
          filters:
            branches:
              only: master